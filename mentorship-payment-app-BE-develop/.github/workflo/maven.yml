#
## This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#
#name: Java CI with Maven
#
#on:
#  push:
#    branches: [ "develop" ]
#  pull_request:
#    branches: [ "develop" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 11
#      uses: actions/setup-java@v3
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#        cache: maven
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
#
#name: Master Branch
#on:
#  pull_request:
#    branches:
#      - 'main'
#jobs:
#  test:
#    name: Test - Units & Integrations
#    runs-on: ubuntu-18.04
#    services:
#      # Label used to access the service container
#      postgres:
#        # Docker Hub image
#        image: postgres
#        # Provide the password for postgres
#        ports:
#          - "5432:5432"
#        env:
#          POSTGRES_HOST: "localhost"
#          POSTGRES_USER: "postgres"
#          POSTGRES_PASSWORD: ""
#          POSTGRES_DB: "fintech_app_db"
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#    steps:
#      - uses: actions/checkout@v1
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11.0.4
#      - name: Maven Package
#        run: mvn -B clean package -DskipTests
#      - name: Maven Verify
#        run: mvn -B clean verify -Pintegration-test
#
